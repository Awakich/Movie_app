import { Movie } from '@/models'
import { FilmIcon } from '@heroicons/react/24/outline'
import { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useRouter } from 'next/router'

interface MovieInfo {
    movie: Movie
}

const CardInfo: NextPage<MovieInfo> = ({ movie }) => {

    const router = useRouter()

    return (
        <div className='space-y-8'>
            <Head>
                <title>{movie.title}</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <nav className='flex items-center justify-start'>
                <FilmIcon className='h-8 animate-pulse cursor-pointer' onClick={() => router.push('/')} />
            </nav>

            <div className='flex items-center gap-10 w-4/5'>
                <Image alt='image movie' src={movie.large_cover_image} width={400} height={400} />
                <div className='space-y-7'>
                    <div className='flex items-center gap-5'>
                        <h2 className='text-7xl font-semibold'>{movie.title}</h2>
                        <p className='text-5xl font-light'>({movie.year})</p>
                    </div>

                    <p className='text-3xl'>Rating: <span className={movie.rating >= 8 ? 'text-emerald-500 font-bold' : "text-red-500 font-bold"}>{movie.rating}</span></p>

                    <p className='text-2xl font-light flex items-center gap-3'>Genres: {movie.genres?.map((item) => <span key={Math.random().toString(36)}>{item}</span>)}</p>

                    <p className='text-xl italic'>{movie.description_intro}</p>

                </div>
            </div>
        </div>
    )
}

export default CardInfo


export const getServerSideProps: GetServerSideProps = async (context) => {
    const id = context.query.id
    const res = await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)
    const data = await res.json()

    return {
        props: {
            movie: data.data.movie
        }
    }
}